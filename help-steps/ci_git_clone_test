#!/bin/bash

## Copyright (C) 2019 - 2021 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

set -x

set -e

true "$0: start"

## Debugging.
true "$0: $(whoami)" || true
ls -la || true

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

## travis.debian.net does not pass the CI environment variable to docker.
## build script reads CI variable.
if echo "$PWD" | grep -q travis ; then
   true "INFO: travis detected, ok."
elif [ ! "$CI" = "true" ]; then
   true "ERROR: You probably do not want to run this outside of a CI."
   exit 1
fi

sudo --non-interactive apt-get update

sudo --non-interactive apt-get --yes --no-install-recommends install git time tor torsocks

sudo --non-interactive systemctl status tor || true
sudo --non-interactive systemctl status tor@default || true

git_tag_nearest="$(git describe --always --abbrev=0)"

pushd /tmp

## Test if git cloning from gitlab over Tor (using torsocks) is functional.
## Useful to have this test fail in case there are generally gitlab
## connectivity issues or blocking of Tor users.

## --branch 15.0.1.7.2-stable
## Can be any tag.

## --shallow-submodules
## Speed up download. Save traffic. Repositories binaries-freedom and
## monero-gui is too large which lead to failed git clone.

# time \
#    torsocks \
#       git \
#          clone \
#          --depth=1 \
#          --branch "$git_tag_nearest" \
#          --jobs=100 \
#          --recurse-submodules \
#          --shallow-submodules \
#          https://gitlab.com/whonix/Whonix.git

time \
   torsocks \
      git \
         clone \
         --depth=1 \
         --branch "$git_tag_nearest" \
         https://gitlab.com/whonix/Whonix.git

pushd Whonix

git_submodule_fetch_command="\
   time \
      torsocks \
         git \
         submodule \
            update \
            --init \
            --recursive \
            --progress \
            --jobs=4"

counter=0
while true ; do
   if $git_submodule_fetch_command ; then
      success=true
      break
   fi
   counter=$(( counter + 1 ))
   if [ "$counter" -gt "3" ]; then
      success=false
      break
   fi
done

if [ "$success" = "false" ]; then
   true "$0 ERROR: downloading git submodules failed."
   exit 1
fi

## Sanity test.
git status

true "$0 INFO: OK. End."
