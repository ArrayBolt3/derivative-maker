#!/bin/bash

## Copyright (C) 2023 - 2023 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source colors
source variables

create-debian-iso-image() {
   ## Sanity test.
   test -d "$binary_build_folder_live_build"
   test -d "$CHROOT_FOLDER"

   cd "$binary_build_folder_live_build"

   ## XXX
   ## live-build bug?
   # P: Begin building root filesystem image...
   # 0+0 records in
   # 0+0 records out
   # 0 bytes copied, 2.8103e-05 s, 0.0 kB/s
   # ln: failed to create symbolic link '/etc/mtab': File exists
   # E: An unexpected failure occurred, exiting...
   if $SUDO_TO_ROOT test -L "$CHROOT_FOLDER/etc/mtab" ; then
      $SUDO_TO_ROOT unlink "$CHROOT_FOLDER/etc/mtab"
   fi

   ## Delete the ISO.
   $SUDO_TO_ROOT \
      $LIVEBUILD_PREFIX \
      dist_build_multiarch_package_item="$dist_build_target_arch" \
      lb clean --binary

   ## Remaster the ISO.
   $SUDO_TO_ROOT \
      $LIVEBUILD_PREFIX \
      dist_build_multiarch_package_item="$dist_build_target_arch" \
      lb binary

   ## TODO: check if ISO size is not too small (only containing debootstraped Debian without derivative packages)

   true
}

main() {
   if [ ! "$dist_build_iso" = "true" ]; then
      true "${green}INFO: Skipping $BASH_SOURCE, because $dist_build_iso is not set to true.${reset}"
      return 0
   fi

   create-debian-iso-image
}

main "$@"
