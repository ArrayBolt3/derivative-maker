#!/bin/bash

## Copyright (C) 2023 - 2023 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source colors
source variables

create-debian-iso-image() {
   ## Sanity test.
   test -d "$binary_build_folder_live_build"
   test -d "$CHROOT_FOLDER"

   cd "$binary_build_folder_live_build"

   ## Remaster the ISO.
   ## This does not re-create the ISO chroot thanks to live-build's stage files.
   $SUDO_TO_ROOT \
      $LIVEBUILD_PREFIX \
      dist_build_multiarch_package_item="$dist_build_target_arch" \
      lb build

   ## TODO: check if ISO size is not too small (only containing debootstraped Debian without packages)

   true
}

main() {
   if [ "$dist_build_install_to_root" = "true" ]; then
      true "${green}INFO: Skipping $BASH_SOURCE, because dist_build_install_to_root is set to true.${reset}"
      return 0
   fi

   if [ "$dist_build_type_long" = "custom-workstation" ]; then
      true
   elif [ "$dist_build_type_long" = "gateway" ]; then
      true
   elif [ "$dist_build_type_long" = "workstation" ]; then
      true
   elif [ "$dist_build_type_long" = "whonix-host" ]; then
      create-debian-iso-image
   elif [ "$dist_build_type_long" = "kicksecure" ]; then
      create-debian-iso-image
   else
      error "ERROR: Invalid dist_build_flavor $dist_build_flavor (dist_build_type_long: $dist_build_type_long). Please report this bug!"
   fi
}

main "$@"
