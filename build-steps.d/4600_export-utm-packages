#!/bin/bash

## Copyright (C) 2012 - 2023 ENCRYPTED SUPPORT LP <adrelanos@whonix.org>
## Copyright (C) 2021 Gavin Pacini
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source colors
source variables

export_utm_packages() {
   ## create folder structure for UTM
   ## move image file
   ## copy configs
   mkdir --parents "${utmfolder}/Data"
   $SUDO_TO_ROOT chown "$user_name:$user_name" "$binary_image_raw_file"
   ## copy instead of move the raw image
   ## disadvantage:
   ## - requires more disk space
   ## advantage:
   ## - makes this step idempotent, easier to test and debug
   ## - can CI test dm-prepare-release
   cp "$binary_image_raw_file" "${utmfolder}/Data/${VMNAME}.raw"
   cp "$source_utm_file" "${utmfolder}/config.plist"

   ## fill in correct architecture and target in UTM template files
   local utm_arch
   local utm_target
   if [ "$dist_build_target_arch" = "arm64" ]; then
      utm_arch="aarch64"
      utm_target="virt"
   else
      utm_arch="x86_64"
      utm_target="q35"
   fi

   sed "s/_ARCH_/${utm_arch}/" "${utmfolder}/config.plist" > "${utmfolder}/config.plist.tmp"
   mv "${utmfolder}/config.plist.tmp" "${utmfolder}/config.plist"

   sed "s/_TARGET_/${utm_target}/" "${utmfolder}/config.plist" > "${utmfolder}/config.plist.tmp"
   mv "${utmfolder}/config.plist.tmp" "${utmfolder}/config.plist"

   ## compress the utm folder into one archive respecting sparse (null) bytes
   tar --create --verbose --gzip --sparse --file="${dist_binary_build_folder}/${VMNAME}.utm.tar.gz" "$utmfolder"
}

main() {
   if [ "$dist_build_utm" = "true" ]; then
      export_utm_packages
   else
      true "${green}INFO: Skipping $BASH_SOURCE, because not using --target utm.${reset}"
   fi
}

main "$@"
